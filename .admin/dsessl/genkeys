rm .truststore
rm .keystore
rm client.truststore

cat << EOF > gen_rootCa_cert.conf
[ req ]
distinguished_name	= req_distinguished_name
prompt				= no
output_password		= cassandra
default_bits		= 2048

[ req_distinguished_name ]
C					= US
O					= org_name
OU					= cluster_name
CN					= rootCa
EOF

openssl req -config gen_rootCa_cert.conf -new -x509 -nodes -subj /CN=rootCa/OU=cluster_name/O=DataStax/C=US/ -keyout rootCa.key -out rootCa.crt -days 365

keytool -keystore .truststore -importcert -file rootCa.crt  -keypass cassandra -storepass cassandra -alias rootca -noprompt

keytool -genkeypair -keyalg RSA -alias 172.17.0.2 -keystore .keystore -storepass cassandra -keypass cassandra -validity 365 -keysize 2048 -dname "CN=172.17.0.2, OU=cluster_name, O=org_name, C=US"

keytool -keystore .keystore -alias 172.17.0.2 -certreq -file node.csr -keypass cassandra -storepass cassandra -dname "CN=172.17.0.2, OU=cluster_name, O=org_name, C=US"

openssl x509 -req -CA rootCa.crt -CAkey rootCa.key -in node.csr -out node.crt_signed -days 365 -CAcreateserial -passin pass:cassandra

keytool -keystore .keystore -alias rootCa -importcert -file rootCa.crt -noprompt  -keypass cassandra -storepass cassandra

keytool -keystore .keystore -alias 172.17.0.2 -importcert -noprompt -file node.crt_signed -keypass cassandra -storepass cassandra

keytool -import -v -trustcacerts -alias CARoot -file rootCa.crt -keystore client.truststore -keypass cassandra -storepass cassandra -noprompt

rm rootCa.key
rm rootCa.crt
rm rootCa.srl
rm gen_rootCa_cert.conf
rm node.csr
rm node.crt_signed
